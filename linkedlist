#include<stdio.h>
#include<stdlib.h>
#define MAX 15
int count=0;
struct node 
{
	int data;
	struct node *next;
} *nn,*first=NULL,*temp;
void create();
void insert();
void delete();
void display();
void main()
{
	int ch;
	while(1)
	{
	   printf("\noperations to be performed in linkedlist:");
       printf("\n1.create\n2.insert\n3.delete\n4.display\n5.exit");
	   printf("\nenter your choice:");
	   scanf("%d",&ch);
	   switch(ch)
	   {
	    	case 1: create();
		            break;
		
		    case 2: insert();
		            break;
		            
		    case 3: delete();
		            break;
		            
		    case 4: display();
		            break;
		
		    case 5: exit(0);
		            break;
	   }
	}
}
void create()
{
	int x,ch;
	do
	{
		nn=(struct node *)malloc(sizeof (struct node));
		printf("enter the data");
		scanf("%d",&x);
		nn->data=x;
		nn->next=NULL;
		if(first==NULL)
		{
			first=nn;
			temp=nn;
		}
		else
		{
			temp->next=nn;
			temp=nn;
		}
		count++;
		printf("do you want to create another node (0/1)");
		scanf("%d",&ch);
	} while(ch==1);
}
void insert()
{
	int x,i,pos;
	nn=(struct node *)malloc(sizeof (struct node));
	printf("enter data");
	scanf("%d",&x);
	nn->data=x;
	nn->next=NULL;
	printf("enter position");
	scanf("%d",&pos);
	if(pos==1)
	{
		nn->next=first;
		first=nn;
		count++;
	}
	else if(pos==count+1)
	{
		temp=first;
		for(i=1;i<pos-1;i++)
		{
			temp->next=temp;
			temp->next=nn;
            count++;
		}
    }
		else if(pos>1 && pos<=count)
		{
			temp=first;
			for(i=1;i<pos-1;i++)
			{
			temp->next=temp;
		    }
		    nn->next=temp->next;
		    temp->next=nn;
			
		}
		else
		{
			printf("invalid choice!!");
		}
}
void delete()
{
	int pos,i;
	struct node *ptr;
	printf("enter thee position which yu want to delete:");
	scanf("%d",&pos);
	if(pos==1)
	{
		temp=first;
		temp=temp->next;
		free(temp);
		count--;
	}
	else if(pos==count)
	{
		temp=first;
		for(i=1;i<pos-1;i++)
		{
			temp=temp->next;
		}
		ptr=temp->next;
		temp->next=NULL;
		free(ptr);
		count--;
	}
	else if(pos>1&&pos<count)
	{
		temp=first;
		for(i=1;i<=pos-1;i++)
		{
			temp=temp->next;
		}
		ptr=temp->next;
		temp->next=ptr->next;
		free(ptr);
		count--;
	}
	else
	{
		printf("invald choice");
	}
}
void display()
{
	temp=first;
	while(temp!=NULL)
	{
		printf("%d\t",temp->data);
		temp=temp->next;
	}
}
